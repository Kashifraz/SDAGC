using UnityEngine;

/// <summary>
/// This class is used for adjusting the camera's viewport to maintain a target aspect ratio.
/// A letterbox is then sized appropriately.
/// It is attached to the Main Camera in the scene.
/// </summary>

public class CameraViewportController : MonoBehaviour
{
    public RectTransform topBlackBar;
    public RectTransform bottomBlackBar;

    public RectTransform UICanvasTransform;

    // The target aspect ratio you want to maintain (default is 16:9).
    public float targetAspectRatio = 16.0f / 9.0f;


    private void Start()
    {
        resizeViewport();
        resizeBars();
    }

    /// <summary>
    /// This method resizes the camera's viewport to maintain the target aspect ratio.
    /// This method was generated by ChatGPT-3.
    /// </summary>
    private void resizeViewport()
    {
        // Get the main camera in the scene.
        Camera mainCamera = Camera.main;

        // Check if a camera is available.
        if (mainCamera != null)
        {
            // Calculate the current aspect ratio of the screen.
            float currentAspectRatio = (float)Screen.width / Screen.height;

            // Calculate scaling factors to adjust the viewport.
            float scaleHeight = currentAspectRatio / targetAspectRatio;
            float scaleWidth = 1.0f / scaleHeight;

            // Create a Rect to define the camera's viewport settings.
            Rect viewportRect = new Rect(0, 0, 1, 1);

            // If the screen is wider than the target aspect ratio
            if (scaleHeight > 1.0f)
            {
                // Adjust the width to maintain the target aspect ratio.
                viewportRect.width = 1.0f / scaleWidth;
                // Center the viewport horizontally
                viewportRect.x = (1.0f - viewportRect.width) / 2.0f;
            }
            // If the screen is taller than or equal to the target aspect ratio
            else
            {
                // Adjust the height to maintain the target aspect ratio.
                viewportRect.height = scaleHeight;
                // Center the viewport vertically
                viewportRect.y = (1.0f - viewportRect.height) / 2.0f;
            }

            // Apply the calculated viewport settings to the camera.
            mainCamera.rect = viewportRect;
        }
    }

    /// <summary>
    /// This class resizes black bars in the scene.
    /// They are resized to fill the space between the camera viewport and the UI canvas overlay
    /// </summary>
    public void resizeBars()
    {
        float camHeight = Camera.main.rect.height;
        float canvasHeight = UICanvasTransform.rect.height;
        float notCamHeight = (1.0f - camHeight) / 2;
        float blackBarHeight = (notCamHeight * canvasHeight) * 2;

        // set the black bar height
        topBlackBar.sizeDelta = new Vector2(0, blackBarHeight);

        // set the black bar height
        bottomBlackBar.sizeDelta = new Vector2(0, blackBarHeight);
    }
}
